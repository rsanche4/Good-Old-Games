Some people think that stalking is bad and that only a really messed up person would stalk someone else. I am here to prove that this is false. When all this happened, I was a senior student and I was completely normal... mostly. It was a satisfying experience I may try again sometime. If you are curious what it's like, you could pay attention to how I went about doing it.

It all started back in winter, during the cold months of December. I remember the first day I saw her was outside of school. It was afternoon, but the day was darkish blue. I remember I got out and looked at her for a split second. She was putting on a coat. Her little breasts under a black shirt. Her body was petite, and slender. Her hair, short and black. Pale skin. I remember looking at her little pointy nose. She looked like a kitten. I kept on walking and forgot about it right after. But I do remember I felt a very weird feeling that day. I wasn't sure what it was. I mean she was young. Way younger than me. Shorter too. Way shorter. Not that I'm tall.

Anyway. Next day, I noticed her once again. That day, she was wearing a long sleeved shirt. Black and dark red squares. It was a little bigger than her body, but it still looked nice. That day, when I looked at her again, I got this feeling of hatred and remorse toward myself. 

The next day I asked the teacher if I could go to the bathroom. All I remember is sitting on the toilet crying, saying "Oh God, she is so young" I cried for so long...

Time passed and I was starting to really wonder who she was. I didn't know her name, her grade. She was just a complete stranger to me. So what I did, I first tried to observe her from time to time. I would just simply watch her interact with people from far away without her noticing me. During lunch time, I would make sure to go down the hallway where the 7th and 8th graders were. I wanted to find out her grade. According to some of my contacts, that hallway had lockers for both 7th and 8th graders, thus she was in either of the two. I knew 7th and 8th graders usually ate in the cafeteria, since they were not allowed to go outside. So everyday, I would sit in the corner and search... and I spotted her.

She was sitting with a group of girls who looked similar to her. Similar hairstyle, and body type. As days passed, I noticed they sat near the door which led to another hallway. Problem was, I couldn't see her everyday because I usually sat too far with my friends. Besides, there was a wall blocking the way. So what I did, I passed by her table with the excuse I had to go to the bathroom. I would do that 2 to 3 times a week. I would make sure to spot her position and what she would be doing at that time.

Once she was with her head down. 

Another time, she had her back curved, looking straight at her friends. 

Usually, she would be looking down.

But she was never talking. Always quiet.

Most of her friends seemed to be in 7th grade, so I assumed she must have been a 7th grader as well.

Now I knew she was in 7th grade, and she was a very shy and quiet individual. She usually wore black quite often, so that led me to assume she was the goth type haha.

Next I wanted to find out at what time she would arrive at school. All I did was walk across the 7th and 8th grade hallway everyday to spot at what time she would arrive. On multiple occasions, I did not see her arrive at all, because I walked too early. As days passed, I came earlier and she wouldn't come. This meant she came to school at a much later time, probably close to 8:05 am, or 8:10 am. She usually arrived right before the bell rang. Sometimes she was with her brother. Sometimes, she wasn't.

So now I wanted to find out what her locker number was. I knew the time she would arrive, so all I had to do was kinda pass by at that time and look at the locker without being noticed. I noticed it was somewhere in the range of 100 to 120, letter B. I do not remember the number well. I think it was 110th something. I always had trouble spotting it because I'm not good at seeing far away. I never wear my glasses when I walk. I should.

Her locker was kinda empty. Since it was during winter months, her clothes with her body heat probably stayed there... Anyway, after that I remember I would know exactly when she arrived. The thing that was difficult to find out was her name. It was hard because the few times I saw her with her friends nobody addressed her. She was just there. Just a quiet girl. That took me quite some time. However, that same month, I found out her name thanks to a close friend.

Turns out when I talked to my best friend about her, he knew her brother. My heartbeat started beating faster than the day I saw her! He only knew she had a brother, and he was a freshman. Unlike his sister, he was very social and open. A very nice guy. If I knew the name of the guy, then I could find everybody by that name in the school's alumni. I went to the yearbook of 2015-16, since I could not find more recent versions. I found him in the 7th grade area, meaning that now, in the 2017-2018 school year, he was a freshman, and damn right he was. I saw his full name. "XXXXX Inaba." Funny how easy it was to find out all this.

If his sister was not in that yearbook, that means XXXXX Inaba's sister was two years younger than him, since by the time he was in 7th grade, she would've been in 5th grade. But now I had a last name. I could go to the school email contacts (all student emails are saved in my account) and in the “recommendations” tab, it would come up. I searched for the last name "Inaba." I got two suggestions. One was her brother, and... there she was. XXXX. I found her name. But this was all kinda messed up.

So I told myself I would stop after I found out her name. But I could not. Something in me didn’t let me stop. I needed her. I had to keep going. So I went after 

her schedule, 

her friends, 

her likings, 

her family, 

her nationality,

her hobbies,

her life. 

As for her schedule, my friends had her in some of their classes. All I did was put the gathered information together. Her schedule should have been something like this.

Period 1
Gymnasium. She sat in the corner, never playing with anybody. I would make sure to go down and look at her everyday from afar.
Period 2
By process of elimination, I concluded she had math in this period.
Period 3
Japanese (either 2 or 3) (online) In this class, she sat near the window when you entered the room. In the computer of the middle. Her brother would sometimes come and sit next to her. Possibly to help her.
Period 4
Journalism. She sat in the first row near the window. 
Period 5
General Science.
Period 6
Honors English. I'll explain how I know it was honors.
Period 7
She was also taking arts and crafts as an elective. Here I once saw her drawing a cherry blossom tree and a mountain in the background. It was beautiful. She had really good drawing skills.
Period 8
A history class. I would pass by every day and see her sitting in the front row to the right, closest to both the teacher and the window.

By the way, just a quick sidenote. She was incredibly quiet. I already said so, but she really was. I still don't know her voice that well since she spoke so low at the times I passed by her. One time, there was a fire drill and I saw her standing right in front of me. She would just look down, which made me real sad because I wanted to talk to her, but I was afraid I could make her uncomfortable, so I just glanced at her from time to time.

Her friends didn't give me much information either. I never focused on them that much. However, there was one girl with long hair, light brown. Nia, her friend, was social. Nia might have been her best friend since I saw them together quite often. Though I kind of doubt she had any close friends. She was just so... empty.

She was in Honors English, not regular English, because I saw a poster of the essays they wrote for a class project. I took a picture of her essay. The writing was immature and childish, but there was creativity, beauty, and sensitivity. I saw potential in her writing. She was definitely going to take AP English or some advanced course in the future. It made me think she was a very sensitive and artistic person, capable of listening to the world around her better than anybody, and although it was hard for her to express herself with strangers, she showed her emotions clearly through her artwork.

She was half-Japanese. Aside from her nationality, she had a strong facial similarity with her brother. She played an instrument, probably a wind instrument because I saw her carrying a box that looked like it had a trumpet. 

She lived in XXXXXX Ave because I once followed her brother home. It was a two story house which seemed desolated all the time. I also knew that their car was a black mini van because I saw her brother and her in the passenger's seats one day by accident. I recognized them immidiately, so as quickly as I could I took a picture of their license plate. It was XXXXXXX.

I collected all of this information throughout the year. It is summer now, the end of summer. And before this new year starts, I wanted to put it all down in one paper. I truly loved every moment of it. And I do not regret it. I would do it again if I could… perhaps I will. And if something ever happened to her, perhaps I could upload her.

I hope she never finds this because that would be kinda messed up haha.

This was my confession. Thank you for reading and I am sorry to take your time. But I truly had to let someone know. Anybody would have done the same thing if they were as in love as I was. Perhaps you would.

Like I said, some people think that stalking is bad and that only a really messed up person would stalk someone else. As you can see, I had friends like everybody else, and I had a life like everybody else. Some people have strange hobbies, but that doesn't make them crazy, and we should not judge them. 

I hope you enjoyed, and if you did then I'm glad. If you didn't, that's okay too. But after all this, you really wonder if that person in the grocery store is actually thinking of stalking you. Wouldn't that be fun? :)